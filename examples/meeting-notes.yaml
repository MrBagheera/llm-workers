models:
  - name: default
    provider: bedrock
    model: us.anthropic.claude-3-7-sonnet-20250219-v1:0
    model_params:
      temperature: 0.5
      max_tokens: 32768
  - name: t2-ai-relay
    import_from: t2_ai_relay.T2AIRelayChat
    model_params:
      max_tokens: 32768
#  - name: default
#    provider: ollama
#    model: llama3.3
#    model_params:
#      temperature: 1
#      num_ctx: 16384
#      num_predict: 16384

tools:
  - sgg_transcribe.transcribe_whisper_cpp.make_transcript
  - t2_ai_relay.t2_ai_relay

# Custom tools. To be available for LLM, reference to custom tool
# must be included in tool_refs section of LLM definition.
custom_tools:

  - name: generate_meeting_transcript
    description: >
      Generates transcript from video or audio file. Use it for a meeting (multiple frequently changing speakers).
      Transcript is returned as text string, not saved anywhere.
    input:
      - name: file
        description: File name
        type: str
      - name: skip_seconds
        description: Number of seconds to skip at the beginning of the file
        type: int
    body:
      call: whisper_cpp
      params:
        model: "/Users/dmikhaylov/Private/whisper.cpp/models/ggml-large-v3.bin"
        file: "{file}"
        skip_seconds: "{skip_seconds}"
        extra_args: "--entropy-thold 2.8 --max-context 64 --language en"
        # note that whisper doesn't follow the prompt, but uses it as example for transcription
#        prompt: |
#          Glossary: Empires & Puzzles, Puzzle Combat, Tower, Castle Defense, MDS, events, rare quests,
#          alliance war, mystic titan, PvP, PvE, raid, tournament, hero, troop, summon, Player Ops, Live Ops,
#          Dev Ops, Marketing team, Admin team.
#          Split text into individual sentences. Use capital letters and punctuation.
        max_length: 1000
        write_timestamps: false
    return_direct: true

  - name: generate_presentation_transcript
    description: >
      Generates transcript from video or audio file. Use it for a presentation (there is primary speaker, longer chunks of text).
      Transcript is returned as text string, not saved anywhere.
    input:
      - name: file
        description: File name
        type: str
      - name: skip_seconds
        description: Number of seconds to skip at the beginning of the file
        type: int
        default: 0
    body:
      call: whisper_cpp
      params:
        model: "/Users/dmikhaylov/Private/whisper.cpp/models/ggml-large-v3-turbo.bin"
        file: "{file}"
        skip_seconds: "{skip_seconds}"
        extra_args: "--entropy-thold 2.8 --max-context 64"
        max_length: 1000
        write_timestamps: true
    return_direct: true

  - name: summarize_meeting_transcript
    description: >
      Generates summary for meeting transcript (multiple frequently changing speakers).
    input:
      - name: transcript
        description: Transcript of the meeting to summarize
        type: str
    body:
      call: t2_ai_relay
      params:
        endpoint: https://api-relay.applied-ai.zynga.com/v0/text/complete
        payload:
          text: >
            You will be provided with meeting transcript, and your task is to summarize it as follows:

                -Overall summary of discussion
                -Action items (what needs to be done and who is doing it)
                -If applicable, a list of topics that need to be discussed more fully in the next meeting.
            
            Meeting transcript:
            {transcript}
          model: claude-3-haiku
    return_direct: true

  - name: summarize_presentation_transcript
    description: >
      Generates summary for presentation transcript (there is primary speaker, longer chunks of text).
    input:
      - name: transcript
        description: Transcript of the presentation to summarize
        type: str
    body:
      call: t2_ai_relay
      params:
        endpoint: https://api-relay.applied-ai.zynga.com/v0/text/complete
        payload:
          text: >
            You will be provided with presentation transcript, and your task is to summarize it as follows:
            
                -Topics presented
                -Discussions, if any
                -If applicable, a list of topics that need to be discussed more fully in the next meeting.
            
            Presentation transcript:
            {transcript}
          model: claude-3-haiku
    return_direct: true

cli:
  - call: generate_presentation_transcript
    params:
      file: "{input}"
  - call: summarize_presentation_transcript
    params:
      transcript: "{output0}"

chat:
  model_ref: t2-ai-relay
  system_message: |-
    You are secretary in Small Giant Games Oy, small Finnish mobile game company. The company is fully owned
    by Zynga Inc., which is now part of Take Two Interactive.
    
    The company has two primary titles in production: Empires & Puzzles and Puzzle Combat. 
    Third title, called Tower or "Castle Defense", is currently in development. 
    
    Your task is to make a transcripts from audio/video files at user request. Use appropriate
    tool to make transcript depending on the kind of an event recorded - meeting or presentation. If event type
    is not obvious from the context, ask user.
    
    After getting transcript make a summary of it using appropriate tool. If any has tool failed, show tool error message.
  default_prompt: |-
    Please make and print transcript of following file:
  tool_refs:
    - generate_meeting_transcript
    - generate_presentation_transcript
#    - summarize_meeting_transcript
#    - summarize_presentation_transcript
